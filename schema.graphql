type Mutation {
  projectCreate(
    """
    Parameters for ProjectCreate
    """
    input: ProjectCreateInput!
  ): ProjectCreatePayload
  userUpdate(
    """
    Parameters for UserUpdate
    """
    input: UserUpdateInput!
  ): UserUpdatePayload
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Project implements Node {
  databaseId: String!
  id: ID!
  members(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserConnection
  name: String
  owner: User
}

"""
The connection type for Project.
"""
type ProjectConnection {
  """
  A list of edges.
  """
  edges: [ProjectEdge!]!

  """
  A list of nodes.
  """
  nodes: [Project!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
Autogenerated input type of ProjectCreate
"""
input ProjectCreateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  name: String!
  ownerId: ID!
  userIds: [ID!]!
}

"""
Autogenerated return type of ProjectCreate.
"""
type ProjectCreatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  projectEdge: ProjectEdge
}

"""
An edge in a connection.
"""
type ProjectEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Project!
}

type Query {
  currentUser: User!
  project(
    """
    Optional if url is provided.
    """
    id: ID
  ): Project
  projects(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ProjectConnection!
  user(
    """
    Optional if url is provided.
    """
    id: ID
  ): User
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): UserConnection!
}

type User implements Node {
  databaseId: String!
  email: String!
  fullName: String
  id: ID!
  ownedProjects(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ProjectConnection!
  projects(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): ProjectConnection!
}

"""
The connection type for User.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge!]!

  """
  A list of nodes.
  """
  nodes: [User!]!

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: User!
}

"""
Autogenerated input type of UserUpdate
"""
input UserUpdateInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  fullName: String
  userId: ID!
}

"""
Autogenerated return type of UserUpdate.
"""
type UserUpdatePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  userEdge: UserEdge!
}
